
#***************************************************************************
#
#! Set top-level variable(s)
#
#quietly set TOP_NAME 			        "top"
#***************************************************************************

#***************************************************************************
#
#! Flow flags
#
quietly set OPTIMIZE 			        0
quietly set COVERAGE 			        0
quietly set COV_HTML 			        0
quietly set REGRESSION                  0
quietly set QUIT		                1 
#***************************************************************************

#***************************************************************************
#
#! Directory structure, set paths and create them
#

quietly set results ./${ISSUE}/test_results

quietly set log_directory $results/log_files
if { ! [ file exists $log_directory ] } { file mkdir $log_directory; };

quietly set waves_directory $results/waves
if { ! [ file exists $waves_directory ] } { file mkdir $waves_directory; };

quietly set dump_directory $results/dump_files
if { ! [ file exists $dump_directory ] } { file mkdir $dump_directory; };

quietly set coverage $results/coverage
if { ! [ file exists $coverage ] } { file mkdir $coverage; };

quietly set cov_report $results/coverage_report
if { ! [ file exists $cov_report ] } { file mkdir $cov_report; };
#***************************************************************************

#***************************************************************************
#
#! Setup VCOM compiler
#
quietly set VCOM                        "vcom"
quietly set VCOM_FLAGS 		            "-2008 -source -check_synthesis +cover=sbcef \
                                          -fsmverbose +acc -f"
quietly set DESIGN_FILELIST 		    "${TOP_LEVEL_NAME}.filelist"
quietly set VCOM_LOGFILE	            "${log_directory}/vcom.log"
#***************************************************************************

#***************************************************************************
#
#! Setup VLOG compiler
#
quietly set VLOG                       "vlog"
quietly set VLOG_FLAGS 		           "-sv +acc -incr -f"
quietly set TB_FILELIST 		       "test.filelist"
quietly set VLOG_LOGFILE	           "${log_directory}/vlog.log"
#***************************************************************************


#***************************************************************************
#
#! Setup optimizier 
#
quietly set OPTFLAGS [expr { $COVERAGE ? 
					"+acc +cover=sbfec+${TOP_LEVEL_NAME}(${TOP_ARCH})" : 
					"+acc" 
					}]
#***************************************************************************

#***************************************************************************
#
#! Setup simulator 
#
quietly set VSIM 				        "vsim"
quietly set VSIM_FLAGS 		            "-t 1ps -displaymsgmode both -permit_unmatched_virtual_intf"
quietly set VSIM_LIBS		            "-L ${ISSUE_LIB} -L test_lib"
quietly set VSIM_SYNTH_LIBS             "-L ${ISSUE_SYNTH_LIB}"
#"-lib work"
quietly set VSIM_LOGFILE 	            "${log_directory}"
quietly set VSIM_WAVEFILE				"${waves_directory}"
if ($COVERAGE) {
	quietly lappend VSIM_FLAGS "-coverage"
}
if { $OPTIMIZE eq 0 } {
	quietly lappend VSIM_FLAGS "-novopt"
}

quietly set NoQuitOnFinish 	1

quietly set RUN_DO ./run.all
#***************************************************************************

#***************************************************************************
#
#! Setup coverage TODO
#
#quietly set COV 			"coverage"
quietly set COVERDIR 		"./coverage"
quietly set COVERFILE 		"cover_report.ucdb"
quietly set COVFLAGS 		""
#"-onexit"
#quietly set VCOV 			"vcover"
quietly set VCOVFLAGS [expr { $COV_HTML ?
					"-details -html -htmldir ${TOP_LEVEL_NAME}_html " :
					"-details -cvg"
					}]
#***************************************************************************

#***************************************************************************
#
#! Procedures
#
#! Compiles HDL design 
proc compile_design { _design_filelist } {
   global VCOM VCOM_FLAGS  VCOM_LOGFILE WORK_LIB
   
   if [file exists "work"] {vdel -all}
   vlib libs
   vlib libs/work
   vmap work libs/work
   vlib libs/${WORK_LIB}
   vmap ${WORK_LIB} libs/${WORK_LIB}
   eval ${VCOM} -work ${WORK_LIB} ${VCOM_FLAGS} ${_design_filelist} -l ${VCOM_LOGFILE}
}

#! Compile testbench
proc compile_testbench { _tb_filelist } {
   global VLOG VLOG_FLAGS VLOG_LOGFILE
	
	eval ${VLOG} ${VLOG_FLAGS} ${_tb_filelist} -l ${VLOG_LOGFILE}
}

#! Run test
proc run_test { _test_name } {
	global VSIM TOP_NAME VSIM_FLAGS RUN_DO VSIM_WAVEFILE VSIM_OPT_FLAGS \
				VSIM_LOGFILE VSIM_LIBS OPTFLAGS TOP_LEVEL_WRAPPER
	
	eval ${VSIM} ${TOP_NAME} ${VSIM_FLAGS} +TESTNAME=${_test_name} \
			-L work -do ${RUN_DO} ${VSIM_LIBS} \
			-GDUT_WRAPPER=${TOP_LEVEL_WRAPPER} \
			-wlf ${VSIM_WAVEFILE}/${_test_name}.wlf \
			-voptargs=${OPTFLAGS} \
			-l ${VSIM_LOGFILE}/${_test_name}.log
}

proc run_test_post_synth { _test_name } {
	global VSIM TOP_NAME VSIM_FLAGS RUN_DO VSIM_WAVEFILE VSIM_OPT_FLAGS \
				VSIM_LOGFILE VSIM_SYNTH_LIBS OPTFLAGS
	
	eval ${VSIM} ${TOP_NAME} ${VSIM_FLAGS} +TESTNAME=${_test_name} \
			-L work -do ${RUN_DO} ${VSIM_SYNTH_LIBS} \
			-wlf ${VSIM_WAVEFILE}/${_test_name}_synth.wlf \
			-l ${VSIM_LOGFILE}/${_test_name}_synth.log
}

#! Prints configuration 
proc print_config {} {
   global TOP_NAME TOP_LEVEL_NAME TOP_ARCH \
            OPTIMIZE COVERAGE COV_HTML \
            VERBOSITY_LEVEL CONFIG_DB_TRACE PHASE_TRACE OBJECTION_TRACE MAX_QUIT_COUNT \
    
   puts "************************************************************************"
   puts "CONFIGURATION:"
   puts "----------------------------------------------------------"
   puts "Top name: ${TOP_NAME}"
   puts "Top level name: ${TOP_LEVEL_NAME}"
   puts "Top level architecture: ${TOP_ARCH}"
   puts "----------------------------------------------------------"
   puts [format "Optimization: %s" [expr { $OPTIMIZE ? "Yes" : "No" }]]
   puts [format "Coverage: %s" [expr { $COVERAGE ? "Yes" : "No" }]]
   puts [format "Coverage report as html: %s" [expr { $COV_HTML ? "Yes" : "No" }]]
   puts "************************************************************************"
}

#! Cleans working directory
proc clean {} {
   global lib_dir results
   file delete -force $results work transcript
}

#! Precompile altera primitives
proc precompile_altera_primitives {} {
   global VCOM VLOG
   
   set VLIB vlib
   set VMAP vmap
   
   set ALTERA_PRIM_LIB_DIR "./libalteraprimitives"
   set QUARTUS_INSTALL_DIR "/tools/Altera-Intel/Quartus-Lite-20.1.1.720/quartus"

   if ![file exists ${ALTERA_PRIM_LIB_DIR}] {

      ${VLIB} 					${ALTERA_PRIM_LIB_DIR}
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_ver
	   ${VMAP} altera_ver			${ALTERA_PRIM_LIB_DIR}/altera_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/lpm_ver
	   ${VMAP} lpm_ver				${ALTERA_PRIM_LIB_DIR}/lpm_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/sgate_ver
	   ${VMAP} sgate_ver			${ALTERA_PRIM_LIB_DIR}/sgate_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_mf_ver
	   ${VMAP} altera_mf_ver		${ALTERA_PRIM_LIB_DIR}/altera_mf_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_lnsim_ver
	   ${VMAP} altera_lnsim_ver	${ALTERA_PRIM_LIB_DIR}/altera_lnsim_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/cycloneive_ver
	   ${VMAP} cycloneive_ver		${ALTERA_PRIM_LIB_DIR}/cycloneive_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera
	   ${VMAP} altera				${ALTERA_PRIM_LIB_DIR}/altera
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/lpm
	   ${VMAP} lpm					${ALTERA_PRIM_LIB_DIR}/lpm
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/sgate
	   ${VMAP} sgate				${ALTERA_PRIM_LIB_DIR}/sgate
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_mf
	   ${VMAP} altera_mf			${ALTERA_PRIM_LIB_DIR}/altera_mf
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_lnsim
	   ${VMAP} altera_lnsim		${ALTERA_PRIM_LIB_DIR}/altera_lnsim
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/cycloneive
	   ${VMAP} cycloneive			${ALTERA_PRIM_LIB_DIR}/cycloneive
	   ${VLOG} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_primitives.v"		           -work altera_ver
	   ${VLOG} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/220model.v"                            -work lpm_ver
	   ${VLOG} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/sgate.v"                               -work sgate_ver
	   ${VLOG} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_mf.v"                           -work altera_mf_ver
	   ${VLOG} -sv "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_lnsim.sv"                   -work altera_lnsim_ver
	   ${VLOG} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/cycloneive_atoms.v"                    -work cycloneive_ver
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_syn_attributes.vhd"             -work altera
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_standard_functions.vhd"         -work altera
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/alt_dspbuilder_package.vhd"            -work altera
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_europa_support_lib.vhd"         -work altera
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_primitives_components.vhd"      -work altera
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_primitives.vhd"                 -work altera
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/220pack.vhd"                           -work lpm
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/220model.vhd"                          -work lpm
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/sgate_pack.vhd"                        -work sgate
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/sgate.vhd"                             -work sgate
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_mf_components.vhd"              -work altera_mf
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_mf.vhd"                         -work altera_mf
	   ${VLOG} -sv "${QUARTUS_INSTALL_DIR}/eda/sim_lib/mentor/altera_lnsim_for_vhdl.sv"   -work altera_lnsim
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/altera_lnsim_components.vhd"           -work altera_lnsim
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/cycloneive_atoms.vhd"                  -work cycloneive
	   ${VCOM} "${QUARTUS_INSTALL_DIR}/eda/sim_lib/cycloneive_components.vhd"             -work cycloneive
   } else {
      ${VLIB} 					${ALTERA_PRIM_LIB_DIR}
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_ver
	   ${VMAP} altera_ver			${ALTERA_PRIM_LIB_DIR}/altera_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/lpm_ver
	   ${VMAP} lpm_ver				${ALTERA_PRIM_LIB_DIR}/lpm_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/sgate_ver
	   ${VMAP} sgate_ver			${ALTERA_PRIM_LIB_DIR}/sgate_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_mf_ver
	   ${VMAP} altera_mf_ver		${ALTERA_PRIM_LIB_DIR}/altera_mf_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_lnsim_ver
	   ${VMAP} altera_lnsim_ver	${ALTERA_PRIM_LIB_DIR}/altera_lnsim_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/cycloneive_ver
	   ${VMAP} cycloneive_ver		${ALTERA_PRIM_LIB_DIR}/cycloneive_ver
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera
	   ${VMAP} altera				${ALTERA_PRIM_LIB_DIR}/altera
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/lpm
	   ${VMAP} lpm					${ALTERA_PRIM_LIB_DIR}/lpm
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/sgate
	   ${VMAP} sgate				${ALTERA_PRIM_LIB_DIR}/sgate
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_mf
	   ${VMAP} altera_mf			${ALTERA_PRIM_LIB_DIR}/altera_mf
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/altera_lnsim
	   ${VMAP} altera_lnsim		${ALTERA_PRIM_LIB_DIR}/altera_lnsim
	   ${VLIB} 					${ALTERA_PRIM_LIB_DIR}/cycloneive
	   ${VMAP} cycloneive			${ALTERA_PRIM_LIB_DIR}/cycloneive
   }
}

#***************************************************************************
